stages:
  - build-and-test
  - benchmark

variables:
  PYTHONUNBUFFERED: "true"

.build_and_test_job: &BUILD_AND_TEST
  stage: build-and-test
  tags: [benchmarks, infinity]
  script:
    - git submodule update --init
    - make test
    - make bench
    - make clean
    - make unittests

tagging_gen:
  <<: *BUILD_AND_TEST
  variables: {USE_TAGGING: "true", GC_TYPE: generational}

tagging_marksweep:
  <<: *BUILD_AND_TEST
  variables: {USE_TAGGING: "true", GC_TYPE: mark_sweep}

tagging_copying:
  <<: *BUILD_AND_TEST
  variables: {USE_TAGGING: "true", GC_TYPE: copying}

boxed_generational_cached:
  <<: *BUILD_AND_TEST
  variables: {USE_TAGGING: "false", GC_TYPE: generational, CACHE_INTEGER: "true"}

boxed_mark_sweep_cached:
  <<: *BUILD_AND_TEST
  variables: {USE_TAGGING: "false", GC_TYPE: mark_sweep, CACHE_INTEGER: "true"}

boxed_copying_cached:
  <<: *BUILD_AND_TEST
  variables: {USE_TAGGING: "false", GC_TYPE: copying, CACHE_INTEGER: "true"}

boxed_generational_uncached:
  <<: *BUILD_AND_TEST
  variables: {USE_TAGGING: "false", GC_TYPE: generational, CACHE_INTEGER: "false"}

boxed_mark_sweep_uncached:
  <<: *BUILD_AND_TEST
  variables: {USE_TAGGING: "false", GC_TYPE: mark_sweep, CACHE_INTEGER: "false"}

boxed_copying_uncached:
  <<: *BUILD_AND_TEST
  variables: {USE_TAGGING: "false", GC_TYPE: copying, CACHE_INTEGER: "false"}

benchmark_job:
  stage: benchmark
  tags: [benchmarks, infinity]
  allow_failure: false
  script:
    - make
    - rebench -d --without-nice -c --commit-id="$CI_BUILD_REF" --environment="Infinity Ubuntu" --project=SOMpp --branch="$CI_BUILD_REF_NAME" core-lib/codespeed.conf SOMpp
